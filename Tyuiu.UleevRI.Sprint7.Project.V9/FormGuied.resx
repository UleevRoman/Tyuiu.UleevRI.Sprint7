<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="MenuStrip_URI.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="textBoxGueid_URI.Text" xml:space="preserve">
    <value>ОБЛАСТЬ ПРИМЕНЕНИЯ
Desktop приложение на основе Widows Forms по предметной области "Каталог видеоклипов" обеспечивает информационную поддержку при работе с базами данных в рамках предметной области.

КРАТКОЕ ОПИСАНИЕ ВОЗМОЖНОСТЕЙ:
— ввод данных
— редактирование данных
— поиск по данным
— сортировка данных 
— фильтрация данных
— построение графиков
— чтение данных из файлов
— сохранение данных
— статистические возможности

ПОДРОБНОЕ ОПИСАНИЕ ВОЗМОЖНОСТЕЙ
Приложение имеет следующий функционал: поиск по всей таблице данных с выделением ячеек, сортировка по возрастанию и убыванию 
различных показателей по указанным столбцам, фильтрация по указанным столбцам, нахождение статистических данных таких, как сумма,
количество строк, среднее, минимальное и максимальное значения по выделенным ячейкам, добавление новых строк в таблицу, а также 
их удаление, чтение данных из csv файла, сохранение таблицы данных в csv файл, построение графиков по ID и их различных показателей.

УРОВЕНЬ ПОДГОТОВКИ ПОЛЬЗОВАТЕЛЯ
Данное приложение предназначено для любого пользователя, начиная от новичка и заканчивая экспертом.

ОПИСАНИЕ ВОЗМОЖНОСТЕЙ:
1. Поиск по таблице данных
Открыть пункт меню "Файл", нажать на раздел "Открыть". Выбрать файл и нажать "Открыть". Напечатать в строке поиска текст, который нужно найти. Нажать на Enter. Ячейки с данным текстом будут окрашены в синий цвет. Для продолжения пользования поиском достаточно печатать текст 
в строке поиска.
2. Сортировка данных по таблице
Открыть пункт меню "Файл", нажать на раздел "Открыть". Выбрать файл и нажать "Открыть". Нажать на Enter в строке сортировки. Выделить столбец, по которому произведется
сортировка. Выбрать в строке сортировки "по возрастанию (от А до Я)" или "по убыванию (от Я до А)". Также можно вернуть таблицу данных 
в прежнее состояние, нажав на кнпоку "Убрать сортировку". Для продолжения пользования данной функцией достаточно каждый раз выбирать 
столбец и вариацию сортировки.
Примечание: перед сортировкой пустые строки, кроме последней, должны быть удалены.
3. Фильтрация данных по таблице
Открыть пункт меню "Файл", нажать на раздел "Открыть". Выбрать файл и нажать "Открыть". Выделить столбец, по которому произведется фильтрация. Напечатать в строке фильтрации
текст, который нужно найти. Нажать на Enter. Также можно вернуть таблицу данных в прежнее состояние, нажав на кнпоку "Убрать фильтрацию". При не нахождении нужной информации
все строчки, кроме первой, будут скрыты. Для продолжения пользования данной функцией достаточно каждый раз выбирать столбец и печатать текст в поле фильтрации.
4. Количество строк 
Открыть пункт меню "Файл", нажать на раздел "Открыть". Выбрать файл и нажать "Открыть". Выделить строки, количество которых нужно найти. Нажать на Enter в поле "количество строк".
Для продолжения пользования данной функцией достаточно каждый раз выделять нужный диапазон ячеек с числами.
5. Сумма 
Открыть пункт меню "Файл", нажать на раздел "Открыть". Выбрать файл и нажать "Открыть". Выделить строки, сумму значений которых нужно найти. Нажать на Enter в поле "сумма".
Для продолжения пользования данной функцией достаточно каждый раз выделять нужный диапазон ячеек с числами.
Примечание: нельзя найти суммы значений выбранного диапозона ячеек, кроме как чисел.
6. Среднее значение
Открыть пункт меню "Файл", нажать на раздел "Открыть". Выбрать файл и нажать "Открыть". Выделить строки, среднее значение которых нужно найти. Нажать на Enter в поле "среднее значение".
Для продолжения пользования данной функцией достаточно каждый раз выделять нужный диапазон ячеек с числами.
Примечание: нельзя найти среднее значение выбранного диапозона ячеек, кроме как чисел.
7. Минимальное значение
Открыть пункт меню "Файл", нажать на раздел "Открыть". Выбрать файл и нажать "Открыть". Выделить строки, из которых нужно найти минимальное значение. Нажать на Enter в поле "минимальное значение".
Для продолжения пользования данной функцией достаточно каждый раз выделять нужный диапазон ячеек с числами.
Примечание: нельзя найти минимальное значение выбранного диапозона ячеек, кроме как чисел.
8. Максимальное значение
Открыть пункт меню "Файл", нажать на раздел "Открыть". Выбрать файл и нажать "Открыть". Выделить строки, из которых нужно найти максимальное значение. Нажать на Enter в поле "максимальное значение".
Для продолжения пользования данной функцией достаточно каждый раз выделять нужный диапазон ячеек с числами.
Примечание: нельзя найти максимальное значение выбранного диапозона ячеек, кроме как чисел.
9. Удаление строк
Открыть пункт меню "Файл", нажать на раздел "Открыть". Выбрать файл и нажать "Открыть". Выделить строки, которые нужно удалить. Нажать на кнопку "Удалить". Согласиться с их удалением, нажав "ОК". 
Для продолжения пользованием данной функцией достаточно каждый раз выделять нужные строчки 
Примечание: удаленные строки нельзя восстановить.
10. Добавление строк
Открыть пункт меню "Файл", нажать на раздел "Открыть". Выбрать файл и нажать "Открыть". Нажать на кнопку "Добавить". Внизу таблицы данных появится пустая строка.
11. Чтение данных из файла
Открыть пункт меню "Файл", нажать на раздел "Открыть". Выбрать файл и нажать "Открыть". В окне с разделом графики для этого предоставляется кнопка.
12. Сохранение данных 
Открыть пункт меню "Файл", нажать на раздел "Сохранить". Напечатать название файла и нажать "Сохранить". В окне с разделом графики для этого предоставляется кнопка.
13. Удалить график 
Открыть пункт меню "Файл", нажать на раздел "Открыть". Выбрать файл и нажать "Открыть". После построения графика нажать на кнопку "Удалить график".
14. Построить график 
Открыть пункт меню "Файл", нажать на раздел "Открыть". Выбрать столбец, по которому будет строиться график. Нажать на кнопку "Построить график".
Примечание: график строится по столбцу с числами.
15. Кнопка меню "Графики"
Открыть пункт меню "Графики", нажать на раздел "Перейти к разделу". Для продолжения работы нажать на кнопку "Открыть файл".
16. Кнопка меню "Краткое руководство"
Открыть пункт меню "Краткое руководство", нажать на раздел "Открыть".
17. Пункт меню "О программе"
Нажать на пункт меню "О программе".
18. Кнопка меню "Назад"
Нажатие на пункт пемню "Назад" позволяет вернуться к главному окну.

При сбое в работе аппаратуры восстановление нормальной работы системы должно производиться после:
— перезагрузки операционной системы;
— запуска исполняемого файла системы.</value>
  </data>
</root>